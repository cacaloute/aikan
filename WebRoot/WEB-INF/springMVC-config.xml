<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!--自动扫描的控制包名 -->
	<!-- 控制器包，就是放springmvc的控制器类@Controller注解 -->
	<context:component-scan base-package="com.aikan.controller" />

	<!-- 默认的注解映射的支持，后续很多功能都基于此配置 -->
	<mvc:annotation-driven>
		<!-- 决定json数据的组件包 -->
		<mvc:message-converters register-defaults="true">
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 视图解释类，此配置说明jsp作为显示页面技术，并且可以使用jstl -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- <url-pattern>/</url-pattern>的前提下 -->
	<!-- 对静态资源文件的访问 方案一 （二选一） -->
	<!-- 这样静态资源的访问就不会经过核心控制器，直接返回给客户端 -->
	<!-- mvc:default-servlet-handler/ -->
	
	<!-- 配置文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过2MB。 注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="2000000" />
		<!-- 最大内存大小 (40960) -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出 org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时， 自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">
					background/error_fileupload
				</prop>
			</props>
		</property>
	</bean>

</beans>